{
	"info": {
		"_postman_id": "2cda4df2-bf1b-4a78-939f-f441d2254531",
		"name": "Google Books",
		"description": "Scénario n°1\n\nEtant donné l'utilisation de l'url [https://www.googleapis.com/books/v1/volumes](https://www.googleapis.com/books/v1/volumesEt)\n\n[Et](https://www.googleapis.com/books/v1/volumesEt) que nous ajoutons le paramètre ?q={{search terms}}  \nqui correspond à la recherche par mot clé variabiliser\n\nQuand nous activons la requête avec la méthode Get\n\nAlors nous obtenons un statut 200\n\nEt dans un test nous comparons le nombre de réponses obtenu avec le nombre donné dans la variable maxResult\n\nScénario n°2\n\nEtant donné l'utilisation de la requête https://www.googleapis.com/books/v1/volumes/  \n  \nEt que dans la requête précédente nous récupérons au sein d'une variable l'id de la première réponse\n\nEt que nous utilisons cette dernière comme paramètre\n\nQuand nous activons cette requête avec la méthode Get\n\nAlors nous obtenons un statut 200\n\nEt nous vérifions si la réponse obtenu contient différents éléments (corps, json, etc...)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "recherche par mots-clés",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"    const jsonData = pm.response.json();\r",
							"    let volumeId=jsonData.items[0].id;\r",
							"    pm.environment.set(\"volumeId\", volumeId);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"var data = pm.response.json().items;\r",
							"pm.test('Nombre de réponse = ' + Object.keys(data).length, function () {\r",
							"    pm.expect(Object.keys(data).length).to.eq(parseInt(pm.variables.get(\"maxResults\")));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('Max Results :' + pm.collectionVariables.get('maxResults'))\r",
							"\r",
							"pm.variables.set('maxResults', pm.collectionVariables.get('maxResults'))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LIST Books}}&maxResults={{maxResults}}",
					"host": [
						"{{LIST Books}}&maxResults={{maxResults}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "recherche par id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.jsonBody(\"kind\");\r",
							"});\r",
							"\r",
							"pm.test(\"response must be valid and have a body\", function () {\r",
							"     pm.response.to.be.ok;\r",
							"     pm.response.to.be.withBody;\r",
							"     pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const schema={\r",
							"    \"id\": { \"type\": \"string\"    },\r",
							"    \"kind\": { \"type\": \"string\" },\r",
							"    \"etag\": { \"type\": \"string\" },\r",
							"    \"selfLink\": { \"type\": \"string\" }  \r",
							"}\r",
							"pm.test(\"properties are correct, validate json schema\", function(){\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{GET Book}}{{volumeId}}",
					"host": [
						"{{GET Book}}{{volumeId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "search terms",
			"value": "policier",
			"type": "string"
		},
		{
			"key": "LIST Books",
			"value": "https://www.googleapis.com/books/v1/volumes?q={{search terms}}",
			"type": "string"
		},
		{
			"key": "volumeId",
			"value": "{{volumeId}}",
			"type": "string"
		},
		{
			"key": "GET Book",
			"value": "https://www.googleapis.com/books/v1/volumes/",
			"type": "string"
		},
		{
			"key": "maxResults",
			"value": "10",
			"type": "string"
		}
	]
}